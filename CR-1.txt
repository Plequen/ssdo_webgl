WebGL : 

Geometry Buffer :
	- problème principal : la version actuelle d'OpenGL utilisée par WebGL (OpenGL ES 2.0)
	ne permet pas de faire du rendu multi-cible dans les shaders :
	il est donc impossible de générer plusieurs textures en une seule passe.
	- le geometry buffer est donc créé en plusieurs passes : 
		- une passe pour les normales et le depth buffer
		- une passe pour le caractère diffus des objets
		(coefficient de diffusion * couleur de diffusion * éventuelle couleur de texture)
		- une passe pour les coordonnées 3D (utile pour SSDO)
	- visualisation :
		une grille affiche les différentes données du geometry buffer, 
		il est possible de naviguer entre les différentes vues
		
Passe de lumière :
	- génération d'une shadow map pour chaque lumière de la scène :
		- visualisation des shadow maps
		- la résolution des shadow maps est réglable
		- il est possible de prendre le contrôle des lumières pour les déplacer interactivement
		
Screen-space :
	- hard shadows en utilisant les shadow maps
		- les lumières possèdent une couleur, une intensité, un angle d'influence, une atténuation avec la distance
	- ssdo : début d'ajout des shaders ssdo et visualisation du rendu
	
Divers :
	- chargement d'un modèle 3D de format .OBJ : seul le caractère diffus (couleur et texture)
	est pour le moment pris en compte ;
	Adaptation avec le reste du code pour être utilisable avec tous les shaders
		- essai avec la scène Sponza de Crytek
	- génération d'une texture de bruit passée aux shaders ssdo afin d'avoir accès à des nombres aléatoires
		
